{
  "items": [
    {
      "references": [
        {
          "name": "Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#resources"
        },
        {
          "name": "Links",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#links"
        },
        {
          "name": "Includind Related Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#including-related-resources"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "hypermedia",
          "category": "Hypermedia",
          "name": "Hypermedia",
          "description": "How to use hypermedia",
          "_links": {
            "self": {
              "href": "/design/topics/hypermedia.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/hypermedia/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/hypermedia.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#resources"
        },
        {
          "name": "Links",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#links"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "hypermedia-read",
          "category": "Hypermedia",
          "name": "Hypermedia (read)",
          "description": "How to use hypermedia to read data",
          "_links": {
            "self": {
              "href": "/design/topics/hypermedia-read.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/hypermedia-read/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/hypermedia-read.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Links",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#links"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "hypermedia-write",
          "category": "Hypermedia",
          "name": "Hypermedia (write)",
          "description": "How to use hypermedia to write data",
          "_links": {
            "self": {
              "href": "/design/topics/hypermedia-write.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/hypermedia-write/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/hypermedia-write.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Requests",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#requests"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-methods",
          "category": "HTTP Methods",
          "name": "HTTP methods",
          "description": "General information about HTTP methods usage",
          "_links": {
            "self": {
              "href": "/design/topics/http-methods.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-methods/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-methods.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "GET",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#get"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-methods-get",
          "category": "HTTP Methods",
          "name": "GET",
          "description": "The GET method requests a representation of the specified resource. Requests using GET should only retrieve data and should have no other effect.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-methods-get.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-methods-get/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-methods-get.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "POST",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#post"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-methods-post",
          "category": "HTTP Methods",
          "name": "POST",
          "description": "The POST method requests that the server accept the entity enclosed in the request as a new subordinate of the web resource identified by the URI. The data POSTed might be, for example, an annotation for existing resources; a message for a bulletin board, newsgroup, mailing list, or comment thread; a block of data that is the result of submitting a web form to a data-handling process; or an item to add to a database.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-methods-post.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-methods-post/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-methods-post.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "PUT",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#put"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-methods-put",
          "category": "HTTP Methods",
          "name": "PUT",
          "description": "The PUT method requests that the enclosed entity be stored under the supplied URI. If the URI refers to an already existing resource, it is modified; if the URI does not point to an existing resource, then the server can create the resource with that URI.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-methods-put.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-methods-put/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-methods-put.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "DELETE",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#delete"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-methods-delete",
          "category": "HTTP Methods",
          "name": "DELETE",
          "description": "The DELETE method deletes the specified resource.",
          "_links": {
            "self": {
              "href": "/design/topics/http-methods-delete.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-methods-delete/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-methods-delete.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "PATCH",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#patch"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-methods-patch",
          "category": "HTTP Methods",
          "name": "PATCH",
          "description": "The PATCH method applies partial modifications to a resource.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-methods-patch.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-methods-patch/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-methods-patch.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Responses Codes",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#response-codes"
        },
        {
          "name": "GET responses (Resource)",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#responses-resource"
        },
        {
          "name": "GET responses (Collection)",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#responses-collection"
        },
        {
          "name": "POST responses",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#responses"
        },
        {
          "name": "PUT responses",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#responses-1"
        },
        {
          "name": "PATCH responses",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#responses-2"
        },
        {
          "name": "DELETE responses",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#responses-3"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status",
          "category": "HTTP Protocol",
          "name": "HTTP Statuses",
          "description": "General information about HTTP statuses usage",
          "_links": {
            "self": {
              "href": "/design/topics/http-status.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Successful Requests",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#successful-requests"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-200",
          "category": "HTTP Status Success",
          "name": "200 OK",
          "description": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request, the response will contain an entity describing or containing the result of the action.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-200.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-200/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-200.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Successful Requests",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#successful-requests"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-201",
          "category": "HTTP Status Success",
          "name": "201 Created",
          "description": "The request has been fulfilled, resulting in the creation of a new resource.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-201.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-201/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-201.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Successful Requests",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#successful-requests"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-202",
          "category": "HTTP Status Success",
          "name": "202 Accepted",
          "description": "The request has been accepted for processing, but the processing has not been completed. The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-202.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-202/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-202.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Successful Requests",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#successful-requests"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-204",
          "category": "HTTP Status Success",
          "name": "204 No Content",
          "description": "The server successfully processed the request and is not returning any content.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-204.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-204/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-204.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Redirections",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#redirection"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-302",
          "category": "HTTP Status Redirection",
          "name": "302 Found",
          "description": "Common way of performing URL redirection. An HTTP response with this status code will additionally provide a URL in the location header field. The user agent (e.g. a web browser) is invited by a response with this code to make a second, otherwise identical, request to the new URL specified in the location field. \n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-302.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-302/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-302.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Redirections",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#redirection"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-303",
          "category": "HTTP Status Redirection",
          "name": "303 See Other",
          "description": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), the client should presume that the server has received the data and should issue a redirect with a separate GET message.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-303.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-303/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-303.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Client Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#client-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-400",
          "category": "HTTP Status User Error",
          "name": "400 Bad Request",
          "description": "The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-400.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-400/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-400.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Client Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#client-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-401",
          "category": "HTTP Status User Error",
          "name": "401 Unauthorized",
          "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. \n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-401.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-401/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-401.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Client Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#client-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-403",
          "category": "HTTP Status User Error",
          "name": "403 Forbidden",
          "description": "The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-403.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-403/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-403.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Client Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#client-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-404",
          "category": "HTTP Status User Error",
          "name": "404 Not Found",
          "description": "The requested resource could not be found but may be available in the future. Subsequent requests by the client are permissible.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-404.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-404/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-404.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Client Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#client-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-422",
          "category": "HTTP Status User Error",
          "name": "422 Unprocessable Entity",
          "description": "The request was well-formed but was unable to be followed due to semantic errors.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-422.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-422/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-422.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Server Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#server-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-500",
          "category": "HTTP Status Server Error",
          "name": "500 Internal Server Error",
          "description": "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-500.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-500/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-500.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Server Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#server-errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-503",
          "category": "HTTP Status Server Error",
          "name": "503 Service Unavailable",
          "description": "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-503.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-503/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-503.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Errors",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#errors"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-standard-error",
          "category": "Error handling",
          "name": "Error format",
          "description": "How to provide information about errors",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-standard-error.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-standard-error/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-standard-error.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#resources"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource",
          "category": "Resources",
          "name": "Resource",
          "description": "General informations about resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#resources"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-id",
          "category": "Resources",
          "name": "Resource ID",
          "description": "What is a resource ID and/or how it's built",
          "_links": {
            "self": {
              "href": "/design/topics/resource-id.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-id/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-id.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "URL Structure",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#url-structure"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-url-format",
          "category": "Resources",
          "name": "URL format",
          "description": "How to design URLs",
          "_links": {
            "self": {
              "href": "/design/topics/resource-url-format.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-url-format/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-url-format.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "GET",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#get"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-retrieve",
          "category": "Resources",
          "name": "Retrieve resource",
          "description": "How to retrieve a resource",
          "_links": {
            "self": {
              "href": "/design/topics/resource-retrieve.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-retrieve/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-retrieve.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Requesting Partiel Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#requesting-partial-resources"
        },
        {
          "name": "Nested Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#nested-resources"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-retrieve-partial",
          "category": "Resources",
          "name": "Retrieve resource partially",
          "description": "How to retrieve partially a resource",
          "_links": {
            "self": {
              "href": "/design/topics/resource-retrieve-partial.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-retrieve-partial/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-retrieve-partial.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Includind Related Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#including-related-resources"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-retrieve-dereference",
          "category": "Resources",
          "name": "Dereference Relationships",
          "description": "How to load a resource and its linked resources in one call",
          "_links": {
            "self": {
              "href": "/design/topics/resource-retrieve-dereference.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-retrieve-dereference/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-retrieve-dereference.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "POST",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#post"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-creation",
          "category": "Resources",
          "name": "Create resource",
          "description": "How to create resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource-creation.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-creation/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-creation.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "PATCH",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#patch"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-update",
          "category": "Resources",
          "name": "Update resource",
          "description": "How to update a resource",
          "_links": {
            "self": {
              "href": "/design/topics/resource-update.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-update/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-update.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "PATCH",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#patch"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-update-partial",
          "category": "Resources",
          "name": "Update resource partially",
          "description": "How to udate partially a resource",
          "_links": {
            "self": {
              "href": "/design/topics/resource-update-partial.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-update-partial/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-update-partial.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "DELETE",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#delete"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-deletion",
          "category": "Resources",
          "name": "Delete resource",
          "description": "How to delete resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource-deletion.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-deletion/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-deletion.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "PUT",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#put"
        },
        {
          "name": "Actions",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#actions"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-action",
          "category": "Resources",
          "name": "Action resource",
          "description": "How to use action resource (e.g. resources like /cancel or /approve)",
          "_links": {
            "self": {
              "href": "/design/topics/resource-action.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-action/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-action.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Relationships",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#relationships"
        },
        {
          "name": "Links",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#links"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-relationships",
          "category": "Resources",
          "name": "Relationships",
          "description": "How to define and use relations between resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource-relationships.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-relationships/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-relationships.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Collections",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#collections"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "collection",
          "category": "Collection Resources",
          "name": "Collection",
          "description": "What is a collection (set) of resources",
          "_links": {
            "self": {
              "href": "/design/topics/collection.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/collection/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/collection.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "GET",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#get"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "collection-retrieve",
          "category": "Collection Resources",
          "name": "Retrieve a collection",
          "description": "How to get a collection or resources",
          "_links": {
            "self": {
              "href": "/design/topics/collection-retrieve.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/collection-retrieve/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/collection-retrieve.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Pagination",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#pagination"
        },
        {
          "name": "Pagination of Related Resources",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#pagination-of-related-resources"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "collection-pagination",
          "category": "Collection Resources",
          "name": "Pagination",
          "description": "How to retrieve a range of resources in a collection",
          "_links": {
            "self": {
              "href": "/design/topics/collection-pagination.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/collection-pagination/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/collection-pagination.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Filtering",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#filtering"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "collection-filtering",
          "category": "Collection Resources",
          "name": "Filtering",
          "description": "How to select some resources in a collection",
          "_links": {
            "self": {
              "href": "/design/topics/collection-filtering.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/collection-filtering/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/collection-filtering.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Query Parameters",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#query-parameters"
        },
        {
          "name": "Field Names",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#field-names"
        },
        {
          "name": "URL Structure",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#url-structure"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "naming",
          "category": "Naming",
          "name": "Naming",
          "description": "How to name things",
          "_links": {
            "self": {
              "href": "/design/topics/naming.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/naming/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/naming.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Query Parameters",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#query-parameters"
        },
        {
          "name": "Field Names",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#field-names"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "naming-case",
          "category": "Naming",
          "name": "Case",
          "description": "Which case (lowercase, camelCase, ...) to use and when",
          "_links": {
            "self": {
              "href": "/design/topics/naming-case.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/naming-case/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/naming-case.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Query Parameters",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#query-parameters"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "query-parameter",
          "category": "Miscellaneous",
          "name": "Query parameters",
          "description": "How to use query parameters",
          "_links": {
            "self": {
              "href": "/design/topics/query-parameter.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/query-parameter/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/query-parameter.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Asynchronicity",
          "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide#asynchronicity"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "asynchronicity",
          "category": "Asynchronicity",
          "name": "Asynchronicity",
          "description": "How to handle long operations",
          "_links": {
            "self": {
              "href": "/design/topics/asynchronicity.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/asynchronicity/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/asynchronicity.json"
        }
      }
    }
  ],
  "_embedded": {
    "guideline": {
      "id": "cloud-foundy-cloud-controller-api-style-guide",
      "title": "Cloud Controller API v3 Style Guide (Proposal)",
      "type": "github",
      "url": "https://github.com/cloudfoundry/cc-api-v3-style-guide",
      "company": "Cloud Foundry",
      "companyLogoUrl": "/media/logos/cloudfoundry.png",
      "companyUrl": "https://www.cloudfoundry.org/",
      "screenshotUrl": "/media/screenshots/cloud-foundy-cloud-controller-api-style-guide.png",
      "date": "2016-05-11T00:00:00.000Z",
      "reviewDate": "2016-08-18T00:00:00.000Z",
      "_links": {
        "self": {
          "href": "/design/guidelines/cloud-foundy-cloud-controller-api-style-guide.json"
        },
        "guidelineTopics": {
          "href": "/design/guidelines/cloud-foundy-cloud-controller-api-style-guide/topics.json"
        }
      }
    }
  },
  "_links": {
    "self": {
      "href": "/design/guidelines/cloud-foundy-cloud-controller-api-style-guide/topics.json"
    },
    "guideline": {
      "href": "/design/guidelines/cloud-foundy-cloud-controller-api-style-guide.json"
    }
  }
}