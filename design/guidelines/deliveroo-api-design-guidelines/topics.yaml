items:
  - references:
      - name: Fine-grained
        url: 'http://deliveroo.engineering/guidelines/api-design/#fine-grained'
    _embedded:
      topic:
        id: api-counts
        category: API Design
        name: API counts
        description: How many endpoints/resources in an API?
        _links:
          self:
            href: /design/topics/api-counts.yaml
          topicGuidelines:
            href: /design/topics/api-counts/guidelines.yaml
    _links:
      topic:
        href: /design/topics/api-counts.yaml
  - references:
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
      - name: Query parameters
        url: 'http://deliveroo.engineering/guidelines/api-design/#query-parameters'
        quote: Those should accept the page and per_page parameters
    _embedded:
      topic:
        id: collection-pagination
        category: Collection Resources
        name: Pagination
        description: How to retrieve a range of resources in a collection
        _links:
          self:
            href: /design/topics/collection-pagination.yaml
          topicGuidelines:
            href: /design/topics/collection-pagination/guidelines.yaml
    _links:
      topic:
        href: /design/topics/collection-pagination.yaml
  - references:
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
    _embedded:
      topic:
        id: collection-retrieve
        category: Collection Resources
        name: Retrieve a collection
        description: How to get a collection or resources
        _links:
          self:
            href: /design/topics/collection-retrieve.yaml
          topicGuidelines:
            href: /design/topics/collection-retrieve/guidelines.yaml
    _links:
      topic:
        href: /design/topics/collection-retrieve.yaml
  - references:
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
    _embedded:
      topic:
        id: collection
        category: Collection Resources
        name: Collection
        description: What is a collection (set) of resources
        _links:
          self:
            href: /design/topics/collection.yaml
          topicGuidelines:
            href: /design/topics/collection/guidelines.yaml
    _links:
      topic:
        href: /design/topics/collection.yaml
  - references:
      - name: Internationalisation (i18n)
        url: 'http://deliveroo.engineering/guidelines/api-design/#internationalisation-i18n'
    _embedded:
      topic:
        id: data-internationalization
        category: Data
        name: Internationalization
        description: Providing internationalized data representation (e.g. adapted to the user's country)
        _links:
          self:
            href: /design/topics/data-internationalization.yaml
          topicGuidelines:
            href: /design/topics/data-internationalization/guidelines.yaml
    _links:
      topic:
        href: /design/topics/data-internationalization.yaml
  - references:
      - name: Documenting APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#documenting-apis'
    _embedded:
      topic:
        id: documentation
        category: Miscellaneous
        name: Documentation
        description: How to produce and/or propose API documentation
        _links:
          self:
            href: /design/topics/documentation.yaml
          topicGuidelines:
            href: /design/topics/documentation/guidelines.yaml
    _links:
      topic:
        href: /design/topics/documentation.yaml
  - references:
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
    _embedded:
      topic:
        id: errors
        category: Error handling
        name: Errors
        description: How to handle errors
        _links:
          self:
            href: /design/topics/errors.yaml
          topicGuidelines:
            href: /design/topics/errors/guidelines.yaml
    _links:
      topic:
        href: /design/topics/errors.yaml
  - references:
      - name: General Principles
        url: 'http://deliveroo.engineering/guidelines/api-design/#general-principles'
        quote: |
          We choose to adopt three general principles. Here’s a shortcut to remember:
          RESTful, Hypermedia, Fine-grained
      - name: API and domain modelling
        url: 'http://deliveroo.engineering/guidelines/api-design/#api-and-domain-modelling'
      - name: External-facing APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#external-facing'
      - name: Mobile-friendly APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#mobile-friendly-apis'
      - name: Public-friendly APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#public-friendly-apis'
    _embedded:
      topic:
        id: global-design
        category: API Design
        name: Global design
        description: General considerations on API design
        _links:
          self:
            href: /design/topics/global-design.yaml
          topicGuidelines:
            href: /design/topics/global-design/guidelines.yaml
    _links:
      topic:
        href: /design/topics/global-design.yaml
  - references:
      - name: Resource lifecycle
        url: 'http://deliveroo.engineering/guidelines/api-design/#resource-lifecycle'
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
      - name: Mutable resources
        url: 'http://deliveroo.engineering/guidelines/api-design/#mutable-resources'
    _embedded:
      topic:
        id: http-caching
        category: HTTP Protocol
        name: Caching
        description: How to use and provide relevant caching informations
        _links:
          self:
            href: /design/topics/http-caching.yaml
          topicGuidelines:
            href: /design/topics/http-caching/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-caching.yaml
  - references:
      - name: Content type negotiation
        url: 'http://deliveroo.engineering/guidelines/api-design/#content-type-negotiation'
      - name: Versioning
        url: 'http://deliveroo.engineering/guidelines/api-design/#versioning'
        quote: null
    _embedded:
      topic:
        id: http-content-negotiation
        category: HTTP Protocol
        name: Content negociation and media types
        description: 'How to describe your API data format and/or propose different formats (like json, yaml, xml atom, ...)'
        _links:
          self:
            href: /design/topics/http-content-negotiation.yaml
          topicGuidelines:
            href: /design/topics/http-content-negotiation/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-content-negotiation.yaml
  - references:
      - name: Resource lifecycle
        url: 'http://deliveroo.engineering/guidelines/api-design/#resource-lifecycle'
        quote: either If-Unmodified-Since or If-Match
      - name: Versioning
        url: 'http://deliveroo.engineering/guidelines/api-design/#versioning'
        quote: Clients may specify a desired version as the v parameter of the Accept header
      - name: Versioning
        url: 'http://deliveroo.engineering/guidelines/api-design/#versioning'
        quote: 'If the version was unspecified, the server should use the latest available version, and specify the Vary header'
      - name: Internationalisation (i18n)
        url: 'http://deliveroo.engineering/guidelines/api-design/#internationalisation-i18n'
        quote: 'Localisation is inherently a representation concern, and HTTP mandates such concerns to be addressed using protocol headers.'
      - name: Single-entity GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-entity-get-endpoints'
        quote: 'Responses should include a Last-Modified or ETag header, and may include both'
      - name: Compression
        url: 'http://deliveroo.engineering/guidelines/api-design/#compression'
        quote: 'Servers may support the Accept-Encoding header for compression purposes, but this is not mandatory.'
    _embedded:
      topic:
        id: http-headers
        category: HTTP Protocol
        name: HTTP Headers
        description: How to use standard or custom HTTP headers
        _links:
          self:
            href: /design/topics/http-headers.yaml
          topicGuidelines:
            href: /design/topics/http-headers/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-headers.yaml
  - references:
      - name: 'PATCH, mutating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#patch-mutating-entities'
        quote: '200 OK, if the modification succeeded'
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: 'POST and PATCH should never result in a 200 (generally 201, occasionally 202).'
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-200
        category: HTTP Status Success
        name: 200 OK
        description: 'Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request, the response will contain an entity describing or containing the result of the action.'
        _links:
          self:
            href: /design/topics/http-status-200.yaml
          topicGuidelines:
            href: /design/topics/http-status-200/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-200.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 201 Created if the entity was successfully created
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: 'POST and PATCH should never result in a 200 (generally 201, occasionally 202).'
    _embedded:
      topic:
        id: http-status-201
        category: HTTP Status Success
        name: 201 Created
        description: 'The request has been fulfilled, resulting in the creation of a new resource.'
        _links:
          self:
            href: /design/topics/http-status-201.yaml
          topicGuidelines:
            href: /design/topics/http-status-201/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-201.yaml
  - references:
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: 'POST and PATCH should never result in a 200 (generally 201, occasionally 202).'
    _embedded:
      topic:
        id: http-status-202
        category: HTTP Status Success
        name: 202 Accepted
        description: |
          The request has been accepted for processing, but the processing has not been completed. The request might or might not be eventually acted upon, and may be disallowed when processing occurs.
        _links:
          self:
            href: /design/topics/http-status-202.yaml
          topicGuidelines:
            href: /design/topics/http-status-202/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-202.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-203
        category: HTTP Status Success
        name: 203 Non-Authoritative Information
        description: |
          The 203 (Non-Authoritative Information) status code indicates that the request was successful but the enclosed payload has been modified from that of the origin server’s 200 (OK) response by a transforming proxy. 
        _links:
          self:
            href: /design/topics/http-status-203.yaml
          topicGuidelines:
            href: /design/topics/http-status-203/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-203.yaml
  - references:
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
        quote: 204 No Content if the entity was successfully destroyed
    _embedded:
      topic:
        id: http-status-204
        category: HTTP Status Success
        name: 204 No Content
        description: The server successfully processed the request and is not returning any content.
        _links:
          self:
            href: /design/topics/http-status-204.yaml
          topicGuidelines:
            href: /design/topics/http-status-204/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-204.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-206
        category: HTTP Status Success
        name: 206 Partial Content
        description: |
          The server is delivering only part of the resource (byte serving) due to a range header sent by the client. The range header is used by HTTP clients to enable resuming of interrupted downloads, or split a download into multiple simultaneous streams.
        _links:
          self:
            href: /design/topics/http-status-206.yaml
          topicGuidelines:
            href: /design/topics/http-status-206/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-206.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-300
        category: HTTP Status Redirection
        name: 300 Multiple Choices
        description: |
          The 300 (Multiple Choices) status code indicates that the target resource has more than one representation, each with its own more specific identifier, and information about the alternatives is being provided so that the user (or user agent) can select a preferred representation by redirecting its request to one or more of those identifiers. In other words, the server desires that the user agent engage in reactive negotiation to select the most appropriate representation(s) for its needs.
        _links:
          self:
            href: /design/topics/http-status-300.yaml
          topicGuidelines:
            href: /design/topics/http-status-300/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-300.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-301
        category: HTTP Status Redirection
        name: 301 Moved Permanently
        description: This and all future requests should be directed to the given URI.
        _links:
          self:
            href: /design/topics/http-status-301.yaml
          topicGuidelines:
            href: /design/topics/http-status-301/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-301.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-302
        category: HTTP Status Redirection
        name: 302 Found
        description: |
          Common way of performing URL redirection. An HTTP response with this status code will additionally provide a URL in the location header field. The user agent (e.g. a web browser) is invited by a response with this code to make a second, otherwise identical, request to the new URL specified in the location field. 
        _links:
          self:
            href: /design/topics/http-status-302.yaml
          topicGuidelines:
            href: /design/topics/http-status-302/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-302.yaml
  - references:
      - name: Resource lifecycle
        url: 'http://deliveroo.engineering/guidelines/api-design/#resource-lifecycle'
    _embedded:
      topic:
        id: http-status-304
        category: HTTP Status Redirection
        name: 304 Not Modified
        description: |
          Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match. In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.
        _links:
          self:
            href: /design/topics/http-status-304.yaml
          topicGuidelines:
            href: /design/topics/http-status-304/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-304.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-307
        category: HTTP Status Redirection
        name: 307 Temporary Redirect
        description: |
          The 307 (Temporary Redirect) status code indicates that the target resource resides temporarily under a different URI and the user agent MUST NOT change the request method if it performs an automatic redirection to that URI. Since the redirection can change over time, the client ought to continue using the original effective request URI for future requests.
        _links:
          self:
            href: /design/topics/http-status-307.yaml
          topicGuidelines:
            href: /design/topics/http-status-307/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-307.yaml
  - references:
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-308
        category: HTTP Status Redirection
        name: 308 Permanent Redirect
        description: |
          The 308 (Permanent Redirect) status code indicates that the target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs. 
        _links:
          self:
            href: /design/topics/http-status-308.yaml
          topicGuidelines:
            href: /design/topics/http-status-308/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-308.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 400 Bad Request if the entity cannot be created with the information in the request body
      - name: 'PATCH, mutating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#patch-mutating-entities'
        quote: '400 Bad Request, if the modification failed.'
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: '400 Bad Request: bad syntax (unknown route, missing required fields or parameters, unknown extra parameters, bad field or parameter values).'
      - name: Parameters
        url: 'http://deliveroo.engineering/guidelines/api-design/#parameters'
        quote: Those endpoints may return 400 Bad Request if parameters are specified.
    _embedded:
      topic:
        id: http-status-400
        category: HTTP Status User Error
        name: 400 Bad Request
        description: |
          The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).
        _links:
          self:
            href: /design/topics/http-status-400.yaml
          topicGuidelines:
            href: /design/topics/http-status-400/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-400.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
        quote: 404 Not Found if the entity does not exist
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: '404 Not Found: the specified entity does not exist (unknown routes should not 404).'
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-404
        category: HTTP Status User Error
        name: 404 Not Found
        description: The requested resource could not be found but may be available in the future. Subsequent requests by the client are permissible.
        _links:
          self:
            href: /design/topics/http-status-404.yaml
          topicGuidelines:
            href: /design/topics/http-status-404/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-404.yaml
  - references:
      - name: Versioning
        url: 'http://deliveroo.engineering/guidelines/api-design/#versioning'
        quote: 'The service should respond with status 406, Not Acceptable if the version is unavailable.'
    _embedded:
      topic:
        id: http-status-406
        category: HTTP Status User Error
        name: 406 Not Acceptable
        description: The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.
        _links:
          self:
            href: /design/topics/http-status-406.yaml
          topicGuidelines:
            href: /design/topics/http-status-406/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-406.yaml
  - references:
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: '409 Conflict: PATCH and PUT failures with unique fields'
    _embedded:
      topic:
        id: http-status-409
        category: HTTP Status User Error
        name: 409 Conflict
        description: |
          Indicates that the request could not be processed because of conflict in the request, such as an edit conflict between multiple simultaneous updates.
        _links:
          self:
            href: /design/topics/http-status-409.yaml
          topicGuidelines:
            href: /design/topics/http-status-409/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-409.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
        quote: 410 Gone if the entity is known to have existed but no longer does.
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: Responses with the following status codes should specify a Cache-Control header
    _embedded:
      topic:
        id: http-status-410
        category: HTTP Status User Error
        name: 410 Gone
        description: |
          Indicates that the resource requested is no longer available and will not be available again. This should be used when a resource has been intentionally removed and the resource should be purged. Upon receiving a 410 status code, the client should not request the resource in the future. Clients such as search engines should remove the resource from their indices. Most use cases do not require clients and search engines to purge the resource, and a *404 Not Found* may be used instead.
        _links:
          self:
            href: /design/topics/http-status-410.yaml
          topicGuidelines:
            href: /design/topics/http-status-410/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-410.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 412 Precondition Failed if e.g. the resource wouldn’t statisfy some uniqueness criterion
      - name: 'PATCH, mutating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#patch-mutating-entities'
        quote: '412 Precondition failed, when failing to honour If-Match or If-Unmodified-Since headers.'
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
        quote: 412 Precondition Failed
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: '412 Precondition failed: resource versioning issues.'
    _embedded:
      topic:
        id: http-status-412
        category: HTTP Status User Error
        name: 412 Precondition Failed
        description: The server does not meet one of the preconditions that the requester put on the request.
        _links:
          self:
            href: /design/topics/http-status-412.yaml
          topicGuidelines:
            href: /design/topics/http-status-412/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-412.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 415 Unsupported if using versioning and the server doesn’t support the specified version
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 415 Unsupported if using versioning and the server doesn’t support the specified version.
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
        quote: 415 Unsupported if using versioning and the server doesn’t support the specified version.
    _embedded:
      topic:
        id: http-status-415
        category: HTTP Status User Error
        name: 415 Unsupported Media Type
        description: 'The request entity has a media type which the server or resource does not support. For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.'
        _links:
          self:
            href: /design/topics/http-status-415.yaml
          topicGuidelines:
            href: /design/topics/http-status-415/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-415.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: '428 Precondition Required, when the request lack a If-* header.'
    _embedded:
      topic:
        id: http-status-428
        category: HTTP Status User Error
        name: 428 Precondition Required
        description: |
          The origin server requires the request to be conditional. 
          Intended to prevent the *lost update* problem, where a client GETs a resource's state, modifies it, 
          and PUTs it back to the server, when meanwhile a third party has modified the state on the server, 
          leading to a conflict.
        _links:
          self:
            href: /design/topics/http-status-428.yaml
          topicGuidelines:
            href: /design/topics/http-status-428/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-428.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 429 Too Many Requests if the service throttles requests from an aggressive client
    _embedded:
      topic:
        id: http-status-429
        category: HTTP Status User Error
        name: 429 Too Many Requests
        description: The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.
        _links:
          self:
            href: /design/topics/http-status-429.yaml
          topicGuidelines:
            href: /design/topics/http-status-429/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-429.yaml
  - references:
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
    _embedded:
      topic:
        id: http-status-standard-error
        category: Error handling
        name: Error format
        description: How to provide information about errors
        _links:
          self:
            href: /design/topics/http-status-standard-error.yaml
          topicGuidelines:
            href: /design/topics/http-status-standard-error/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-status-standard-error.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
    _embedded:
      topic:
        id: http-methods-delete
        category: HTTP Methods
        name: DELETE
        description: The DELETE method deletes the specified resource.
        _links:
          self:
            href: /design/topics/http-methods-delete.yaml
          topicGuidelines:
            href: /design/topics/http-methods-delete/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-methods-delete.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
      - name: Single-entity GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-entity-get-endpoints'
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
    _embedded:
      topic:
        id: http-methods-get
        category: HTTP Methods
        name: GET
        description: |
          The GET method requests a representation of the specified resource. Requests using GET should only retrieve data and should have no other effect.
        _links:
          self:
            href: /design/topics/http-methods-get.yaml
          topicGuidelines:
            href: /design/topics/http-methods-get/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-methods-get.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
    _embedded:
      topic:
        id: http-methods-head
        category: HTTP Methods
        name: HEAD
        description: |
          The HEAD method asks for a response identical to that of a GET request, but without the response body. This is useful for retrieving meta-information written in response headers, without having to transport the entire content.
        _links:
          self:
            href: /design/topics/http-methods-head.yaml
          topicGuidelines:
            href: /design/topics/http-methods-head/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-methods-head.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
      - name: 'PATCH, mutating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#patch-mutating-entities'
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: '409 Conflict: PATCH and PUT failures with unique fields'
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: 'POST and PATCH should never result in a 200 (generally 201, occasionally 202).'
    _embedded:
      topic:
        id: http-methods-patch
        category: HTTP Methods
        name: PATCH
        description: |
          The PATCH method applies partial modifications to a resource.
        _links:
          self:
            href: /design/topics/http-methods-patch.yaml
          topicGuidelines:
            href: /design/topics/http-methods-patch/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-methods-patch.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
      - name: Return codes and errors
        url: 'http://deliveroo.engineering/guidelines/api-design/#return-codes-and-errors'
        quote: 'POST and PATCH should never result in a 200 (generally 201, occasionally 202).'
    _embedded:
      topic:
        id: http-methods-post
        category: HTTP Methods
        name: POST
        description: |
          The POST method requests that the server accept the entity enclosed in the request as a new subordinate of the web resource identified by the URI. The data POSTed might be, for example, an annotation for existing resources; a message for a bulletin board, newsgroup, mailing list, or comment thread; a block of data that is the result of submitting a web form to a data-handling process; or an item to add to a database.
        _links:
          self:
            href: /design/topics/http-methods-post.yaml
          topicGuidelines:
            href: /design/topics/http-methods-post/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-methods-post.yaml
  - references:
      - name: RESTful
        url: 'http://deliveroo.engineering/guidelines/api-design/#restful'
    _embedded:
      topic:
        id: http-methods
        category: HTTP Methods
        name: HTTP methods
        description: General information about HTTP methods usage
        _links:
          self:
            href: /design/topics/http-methods.yaml
          topicGuidelines:
            href: /design/topics/http-methods/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http-methods.yaml
  - references:
      - name: Compression
        url: 'http://deliveroo.engineering/guidelines/api-design/#compression'
        quote: 'Servers may support the Accept-Encoding header for compression purposes, but this is not mandatory.'
    _embedded:
      topic:
        id: http
        category: HTTP Protocol
        name: HTTP protocol
        description: General informations about HTTP protocol
        _links:
          self:
            href: /design/topics/http.yaml
          topicGuidelines:
            href: /design/topics/http/guidelines.yaml
    _links:
      topic:
        href: /design/topics/http.yaml
  - references:
      - name: Hypermedia / HATEOAS
        url: 'http://deliveroo.engineering/guidelines/api-design/#hypermedia--hateoas'
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
        quote: should link to relations next and prev for pagination purposes
      - name: Public-friendly APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#public-friendly-apis'
        quote: 'While it is still recommended to include hypermedia links to encourage good practices, is it not mandated like for internal services.'
    _embedded:
      topic:
        id: hypermedia-read
        category: Hypermedia
        name: Hypermedia (read)
        description: How to use hypermedia to read data
        _links:
          self:
            href: /design/topics/hypermedia-read.yaml
          topicGuidelines:
            href: /design/topics/hypermedia-read/guidelines.yaml
    _links:
      topic:
        href: /design/topics/hypermedia-read.yaml
  - references:
      - name: Hypermedia / HATEOAS
        url: 'http://deliveroo.engineering/guidelines/api-design/#hypermedia--hateoas'
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
        quote: should link to relations next and prev for pagination purposes
      - name: Public-friendly APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#public-friendly-apis'
        quote: 'While it is still recommended to include hypermedia links to encourage good practices, is it not mandated like for internal services.'
    _embedded:
      topic:
        id: hypermedia
        category: Hypermedia
        name: Hypermedia
        description: How to use hypermedia
        _links:
          self:
            href: /design/topics/hypermedia.yaml
          topicGuidelines:
            href: /design/topics/hypermedia/guidelines.yaml
    _links:
      topic:
        href: /design/topics/hypermedia.yaml
  - references:
      - name: Naming
        url: 'http://deliveroo.engineering/guidelines/api-design/#naming'
    _embedded:
      topic:
        id: naming
        category: Naming
        name: Naming
        description: How to name things
        _links:
          self:
            href: /design/topics/naming.yaml
          topicGuidelines:
            href: /design/topics/naming/guidelines.yaml
    _links:
      topic:
        href: /design/topics/naming.yaml
  - references:
      - name: Parameters
        url: 'http://deliveroo.engineering/guidelines/api-design/#parameters'
    _embedded:
      topic:
        id: query-parameter
        category: Miscellaneous
        name: Query parameters
        description: How to use query parameters
        _links:
          self:
            href: /design/topics/query-parameter.yaml
          topicGuidelines:
            href: /design/topics/query-parameter/guidelines.yaml
    _links:
      topic:
        href: /design/topics/query-parameter.yaml
  - references:
      - name: Compression
        url: 'http://deliveroo.engineering/guidelines/api-design/#compression'
        quote: null
      - name: Mobile-friendly APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#mobile-friendly-apis'
    _embedded:
      topic:
        id: performance
        category: Miscellaneous
        name: Performance and bandwidth
        description: How to deal with high traffic or consumers with low bandwith
        _links:
          self:
            href: /design/topics/performance.yaml
          topicGuidelines:
            href: /design/topics/performance/guidelines.yaml
    _links:
      topic:
        href: /design/topics/performance.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
        quote: 429 Too Many Requests if the service throttles requests from an aggressive client
    _embedded:
      topic:
        id: rate-limiting
        category: Miscellaneous
        name: Rate limiting
        description: How to provide information about how many calls a consumer can do
        _links:
          self:
            href: /design/topics/rate-limiting.yaml
          topicGuidelines:
            href: /design/topics/rate-limiting/guidelines.yaml
    _links:
      topic:
        href: /design/topics/rate-limiting.yaml
  - references:
      - name: Single-entity GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-entity-get-endpoints'
        quote: 'Responses should include a Last-Modified or ETag header, and may include both'
    _embedded:
      topic:
        id: resource-change-tracking
        category: Resources
        name: Track change
        description: How to track change on resources
        _links:
          self:
            href: /design/topics/resource-change-tracking.yaml
          topicGuidelines:
            href: /design/topics/resource-change-tracking/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-change-tracking.yaml
  - references:
      - name: 'POST, creating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#post-creating-entities'
    _embedded:
      topic:
        id: resource-creation
        category: Resources
        name: Create resource
        description: How to create resources
        _links:
          self:
            href: /design/topics/resource-creation.yaml
          topicGuidelines:
            href: /design/topics/resource-creation/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-creation.yaml
  - references:
      - name: 'DELETE, destroying entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#delete-destroying-entities'
    _embedded:
      topic:
        id: resource-deletion
        category: Resources
        name: Delete resource
        description: How to delete resources
        _links:
          self:
            href: /design/topics/resource-deletion.yaml
          topicGuidelines:
            href: /design/topics/resource-deletion/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-deletion.yaml
  - references:
      - name: Single-resource representation
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-resource-representation'
        quote: A single resource representation should have a numeric id field
    _embedded:
      topic:
        id: resource-id
        category: Resources
        name: Resource ID
        description: What is a resource ID and/or how it's built
        _links:
          self:
            href: /design/topics/resource-id.yaml
          topicGuidelines:
            href: /design/topics/resource-id/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-id.yaml
  - references:
      - name: null
        url: 'http://deliveroo.engineering/guidelines/api-design/#listing-relations'
    _embedded:
      topic:
        id: resource-relationships
        category: Resources
        name: Relationships
        description: How to define and use relations between resources
        _links:
          self:
            href: /design/topics/resource-relationships.yaml
          topicGuidelines:
            href: /design/topics/resource-relationships/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-relationships.yaml
  - references:
      - name: Fine-grained
        url: 'http://deliveroo.engineering/guidelines/api-design/#fine-grained'
        quote: Embedding entities should be avoided
      - name: Conventions on responses
        url: 'http://deliveroo.engineering/guidelines/api-design/#conventions-on-responses'
        quote: 'In addition, embedded entities (using _embedded) should be avoided when possible'
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
        quote: 'Exceptionally, a collection representation, may embedded representations of the linked resources...'
    _embedded:
      topic:
        id: resource-retrieve-dereference
        category: Resources
        name: Dereference Relationships
        description: How to load a resource and its linked resources in one call
        _links:
          self:
            href: /design/topics/resource-retrieve-dereference.yaml
          topicGuidelines:
            href: /design/topics/resource-retrieve-dereference/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-retrieve-dereference.yaml
  - references:
      - name: Single-entity GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-entity-get-endpoints'
        quote: Partial responses (e.g. with field query param) should not be returned.
    _embedded:
      topic:
        id: resource-retrieve-partial
        category: Resources
        name: Retrieve resource partially
        description: How to retrieve partially a resource
        _links:
          self:
            href: /design/topics/resource-retrieve-partial.yaml
          topicGuidelines:
            href: /design/topics/resource-retrieve-partial/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-retrieve-partial.yaml
  - references:
      - name: Single-entity GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-entity-get-endpoints'
    _embedded:
      topic:
        id: resource-retrieve
        category: Resources
        name: Retrieve resource
        description: How to retrieve a resource
        _links:
          self:
            href: /design/topics/resource-retrieve.yaml
          topicGuidelines:
            href: /design/topics/resource-retrieve/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-retrieve.yaml
  - references:
      - name: 'PATCH, mutating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#patch-mutating-entities'
      - name: Mutable resources
        url: 'http://deliveroo.engineering/guidelines/api-design/#mutable-resources'
    _embedded:
      topic:
        id: resource-update-partial
        category: Resources
        name: Update resource partially
        description: How to udate partially a resource
        _links:
          self:
            href: /design/topics/resource-update-partial.yaml
          topicGuidelines:
            href: /design/topics/resource-update-partial/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-update-partial.yaml
  - references:
      - name: 'PATCH, mutating entities'
        url: 'http://deliveroo.engineering/guidelines/api-design/#patch-mutating-entities'
      - name: Mutable resources
        url: 'http://deliveroo.engineering/guidelines/api-design/#mutable-resources'
    _embedded:
      topic:
        id: resource-update
        category: Resources
        name: Update resource
        description: How to update a resource
        _links:
          self:
            href: /design/topics/resource-update.yaml
          topicGuidelines:
            href: /design/topics/resource-update/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-update.yaml
  - references:
      - name: Path segments
        url: 'http://deliveroo.engineering/guidelines/api-design/#path-segments'
      - name: Single-entity GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-entity-get-endpoints'
      - name: Collection GET endpoints
        url: 'http://deliveroo.engineering/guidelines/api-design/#collection-get-endpoints'
    _embedded:
      topic:
        id: resource-url-format
        category: Resources
        name: URL format
        description: How to design URLs
        _links:
          self:
            href: /design/topics/resource-url-format.yaml
          topicGuidelines:
            href: /design/topics/resource-url-format/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource-url-format.yaml
  - references:
      - name: Listing intrinsic properties
        url: 'http://deliveroo.engineering/guidelines/api-design/#listing-intrinsic-properties'
      - name: Normalising concepts
        url: 'http://deliveroo.engineering/guidelines/api-design/#normalising-concepts'
      - name: Single-resource representation
        url: 'http://deliveroo.engineering/guidelines/api-design/#single-resource-representation'
    _embedded:
      topic:
        id: resource
        category: Resources
        name: Resource
        description: General informations about resources
        _links:
          self:
            href: /design/topics/resource.yaml
          topicGuidelines:
            href: /design/topics/resource/guidelines.yaml
    _links:
      topic:
        href: /design/topics/resource.yaml
  - references:
      - name: null
        url: 'http://deliveroo.engineering/guidelines/api-design/#security'
      - name: Caching
        url: 'http://deliveroo.engineering/guidelines/api-design/#caching'
        quote: 'External APIs must always use TLS so only direct clients or trusted intermediaries who have our certificates (CDNs, typically) will be able to view the content'
    _embedded:
      topic:
        id: security
        category: Security
        name: Security
        description: Security concerns
        _links:
          self:
            href: /design/topics/security.yaml
          topicGuidelines:
            href: /design/topics/security/guidelines.yaml
    _links:
      topic:
        href: /design/topics/security.yaml
  - references:
      - name: Content type negotiation
        url: 'http://deliveroo.engineering/guidelines/api-design/#content-type-negotiation'
        quote: The Accept header may include the v parameter to specify the API version requested; see “Versioning” below.
      - name: Versioning
        url: 'http://deliveroo.engineering/guidelines/api-design/#versioning'
      - name: Public-friendly APIs
        url: 'http://deliveroo.engineering/guidelines/api-design/#public-friendly-apis'
        quote: 'a new (breaking/major) version of a set of public-facing APIS should be an entirely new domain (e.g. v2.my-api.example.com), with entirely segregated infrastructure.'
    _embedded:
      topic:
        id: versioning
        category: API Lifecycle
        name: Updates and Versioning
        description: How to handle API updates and versioning
        _links:
          self:
            href: /design/topics/versioning.yaml
          topicGuidelines:
            href: /design/topics/versioning/guidelines.yaml
    _links:
      topic:
        href: /design/topics/versioning.yaml
_embedded:
  guideline:
    id: deliveroo-api-design-guidelines
    title: API Design
    type: website
    url: 'http://deliveroo.engineering/guidelines/api-design/'
    githubUrl: 'https://github.com/deliveroo/deliveroo.engineering/blob/gh-pages/_guidelines/api-design.md'
    company: Deliveroo
    companyLogoUrl: /media/logos/deliveroo.svg
    companyUrl: 'http://deliveroo.engineering/'
    screenshotUrl: /media/screenshots/deliveroo-api-design-guidelines.png
    date: 2016-09-22T00:00:00.000Z
    reviewDate: 2017-04-23T00:00:00.000Z
    _links:
      self:
        href: /design/guidelines/deliveroo-api-design-guidelines.yaml
      guidelineTopics:
        href: /design/guidelines/deliveroo-api-design-guidelines/topics.yaml
_links:
  self:
    href: /design/guidelines/deliveroo-api-design-guidelines/topics.yaml
  guideline:
    href: /design/guidelines/deliveroo-api-design-guidelines.yaml
