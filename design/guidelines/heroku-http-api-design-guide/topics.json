{
  "items": [
    {
      "references": [
        {
          "name": "Divide Large Responses Across Requests with Ranges",
          "description": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/divide-large-responses-across-requests-with-ranges.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "collection-pagination",
          "category": "Collection Resources",
          "name": "Pagination",
          "description": "How to retrieve a range of resources in a collection",
          "_links": {
            "self": {
              "href": "/design/topics/collection-pagination.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/collection-pagination/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/collection-pagination.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide standard timestamps",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-standard-timestamps.html"
        },
        {
          "name": "Use UTC times formatted in ISO8601",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/use-utc-times-formatted-in-iso8601.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "data-format-date-time",
          "category": "Data",
          "name": "Date and Time",
          "description": "How to deal with date and time data",
          "_links": {
            "self": {
              "href": "/design/topics/data-format-date-time.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/data-format-date-time/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/data-format-date-time.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Accept serialized JSON in request bodies",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/accept-serialized-json-in-request-bodies.html"
        },
        {
          "name": "Provide standard timestamps",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-standard-timestamps.html"
        },
        {
          "name": "Nest foreign key relations",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/nest-foreign-key-relations.html"
        },
        {
          "name": "Keep JSON minified in all responses",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/keep-json-minified-in-all-responses.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "data-format",
          "category": "Data",
          "name": "Data format",
          "description": "which data format use",
          "_links": {
            "self": {
              "href": "/design/topics/data-format.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/data-format/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/data-format.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide Request-Ids for Introspection",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/provide-request-ids-for-introspection.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "debug-diagnose",
          "category": "Miscellaneous",
          "name": "Debug and diagnose",
          "description": "How to provide informations to debug and diagnose",
          "_links": {
            "self": {
              "href": "/design/topics/debug-diagnose.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/debug-diagnose/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/debug-diagnose.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide machine-readable JSON schema",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/artifacts/provide-machine-readable-json-schema.html"
        },
        {
          "name": "Provide human-readable docs",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/artifacts/provide-human-readable-docs.html"
        },
        {
          "name": "Provide executable examples",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/artifacts/provide-executable-examples.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "documentation",
          "category": "Miscellaneous",
          "name": "Documentation",
          "description": "How to produce and/or propose API documentation",
          "_links": {
            "self": {
              "href": "/design/topics/documentation.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/documentation/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/documentation.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Separate Concerns",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/separate-concerns.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "global-design",
          "category": "API Design",
          "name": "Global design",
          "description": "General considerations on API design",
          "_links": {
            "self": {
              "href": "/design/topics/global-design.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/global-design/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/global-design.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Support ETags for Caching",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/support-etags-for-caching.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-caching",
          "category": "HTTP Protocol",
          "name": "Caching",
          "description": "How to use and provide relevant caching informations",
          "_links": {
            "self": {
              "href": "/design/topics/http-caching.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-caching/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-caching.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Require Versioning in the Accepts Header",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/require-versioning-in-the-accepts-header.html"
        },
        {
          "name": "Support ETags for Caching",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/support-etags-for-caching.html"
        },
        {
          "name": "Provide Request-Ids for Introspection",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/provide-request-ids-for-introspection.html"
        },
        {
          "name": "Divide Large Responses Across Requests with Ranges",
          "description": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/divide-large-responses-across-requests-with-ranges.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-headers",
          "category": "HTTP Protocol",
          "name": "HTTP Headers",
          "description": "How to use standard or custom HTTP headers",
          "_links": {
            "self": {
              "href": "/design/topics/http-headers.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-headers/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-headers.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-200",
          "category": "HTTP Status Success",
          "name": "200 OK",
          "description": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request, the response will contain an entity describing or containing the result of the action.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-200.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-200/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-200.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-201",
          "category": "HTTP Status Success",
          "name": "201 Created",
          "description": "The request has been fulfilled, resulting in the creation of a new resource.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-201.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-201/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-201.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-202",
          "category": "HTTP Status Success",
          "name": "202 Accepted",
          "description": "The request has been accepted for processing, but the processing has not been completed. The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-202.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-202/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-202.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-206",
          "category": "HTTP Status Success",
          "name": "206 Partial Content",
          "description": "The server is delivering only part of the resource (byte serving) due to a range header sent by the client. The range header is used by HTTP clients to enable resuming of interrupted downloads, or split a download into multiple simultaneous streams.\n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-206.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-206/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-206.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-401",
          "category": "HTTP Status User Error",
          "name": "401 Unauthorized",
          "description": "Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. \n",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-401.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-401/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-401.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Require Secure Connections",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/require-secure-connections.html"
        },
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-403",
          "category": "HTTP Status User Error",
          "name": "403 Forbidden",
          "description": "The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-403.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-403/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-403.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-422",
          "category": "HTTP Status User Error",
          "name": "422 Unprocessable Entity",
          "description": "The request was well-formed but was unable to be followed due to semantic errors.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-422.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-422/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-422.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-429",
          "category": "HTTP Status User Error",
          "name": "429 Too Many Requests",
          "description": "The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-429.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-429/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-429.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-500",
          "category": "HTTP Status Server Error",
          "name": "500 Internal Server Error",
          "description": "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-500.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-500/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-500.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Generate structured errors",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/generate-structured-errors.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status-standard-error",
          "category": "Error handling",
          "name": "Error format",
          "description": "How to provide information about errors",
          "_links": {
            "self": {
              "href": "/design/topics/http-status-standard-error.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status-standard-error/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status-standard-error.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Return appropriate status codes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/return-appropriate-status-codes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "http-status",
          "category": "HTTP Protocol",
          "name": "HTTP Statuses",
          "description": "General information about HTTP statuses usage",
          "_links": {
            "self": {
              "href": "/design/topics/http-status.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/http-status/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/http-status.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Downcase paths and attributes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/downcase-paths-and-attributes.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "naming-case",
          "category": "Naming",
          "name": "Case",
          "description": "Which case (lowercase, camelCase, ...) to use and when",
          "_links": {
            "self": {
              "href": "/design/topics/naming-case.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/naming-case/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/naming-case.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Resource names",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/resource-names.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "naming",
          "category": "Naming",
          "name": "Naming",
          "description": "How to name things",
          "_links": {
            "self": {
              "href": "/design/topics/naming.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/naming/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/naming.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Keep JSON minified in all responses",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/keep-json-minified-in-all-responses.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "performance",
          "category": "Miscellaneous",
          "name": "Performance and bandwidth",
          "description": "How to deal with high traffic or consumers with low bandwith",
          "_links": {
            "self": {
              "href": "/design/topics/performance.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/performance/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/performance.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Show rate limit status",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/show-rate-limit-status.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "rate-limiting",
          "category": "Miscellaneous",
          "name": "Rate limiting",
          "description": "How to provide information about how many calls a consumer can do",
          "_links": {
            "self": {
              "href": "/design/topics/rate-limiting.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/rate-limiting/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/rate-limiting.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Actions",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/actions.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-action",
          "category": "Resources",
          "name": "Action resource",
          "description": "How to use action resource (e.g. resources like /cancel or /approve)",
          "_links": {
            "self": {
              "href": "/design/topics/resource-action.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-action/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-action.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide full resources where available",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-full-resources-where-available.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-creation",
          "category": "Resources",
          "name": "Create resource",
          "description": "How to create resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource-creation.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-creation/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-creation.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide full resources where available",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-full-resources-where-available.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-deletion",
          "category": "Resources",
          "name": "Delete resource",
          "description": "How to delete resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource-deletion.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-deletion/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-deletion.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Support non-id dereferencing for convenience",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/support-non-id-dereferencing-for-convenience.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-id-semantic",
          "category": "Resources",
          "name": "ID with semantic",
          "description": "Using meaningful ids (like `me`)",
          "_links": {
            "self": {
              "href": "/design/topics/resource-id-semantic.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-id-semantic/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-id-semantic.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Support non-id dereferencing for convenience",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/support-non-id-dereferencing-for-convenience.html"
        },
        {
          "name": "Provide resource (UU)IDs",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-resource-uuids.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-id",
          "category": "Resources",
          "name": "Resource ID",
          "description": "What is a resource ID and/or how it's built",
          "_links": {
            "self": {
              "href": "/design/topics/resource-id.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-id/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-id.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Nest foreign key relations",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/nest-foreign-key-relations.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-relationships",
          "category": "Resources",
          "name": "Relationships",
          "description": "How to define and use relations between resources",
          "_links": {
            "self": {
              "href": "/design/topics/resource-relationships.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-relationships/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-relationships.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide full resources where available",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-full-resources-where-available.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-retrieve",
          "category": "Resources",
          "name": "Retrieve resource",
          "description": "How to retrieve a resource",
          "_links": {
            "self": {
              "href": "/design/topics/resource-retrieve.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-retrieve/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-retrieve.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Provide full resources where available",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/responses/provide-full-resources-where-available.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-update",
          "category": "Resources",
          "name": "Update resource",
          "description": "How to update a resource",
          "_links": {
            "self": {
              "href": "/design/topics/resource-update.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-update/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-update.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Use consistent path formats",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/use-consistent-path-formats.html"
        },
        {
          "name": "Downcase paths and attributes",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/downcase-paths-and-attributes.html"
        },
        {
          "name": "Minimize path nesting",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/requests/minimize-path-nesting.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "resource-url-format",
          "category": "Resources",
          "name": "URL format",
          "description": "How to design URLs",
          "_links": {
            "self": {
              "href": "/design/topics/resource-url-format.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/resource-url-format/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/resource-url-format.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Require Secure Connections",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/require-secure-connections.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "security",
          "category": "Security",
          "name": "Security",
          "description": "Security concerns",
          "_links": {
            "self": {
              "href": "/design/topics/security.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/security/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/security.json"
        }
      }
    },
    {
      "references": [
        {
          "name": "Require Versioning in the Accepts Header",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/foundations/require-versioning-in-the-accepts-header.html"
        },
        {
          "name": "Describe stability",
          "url": "https://geemus.gitbooks.io/http-api-design/content/en/artifacts/describe-stability.html"
        }
      ],
      "_embedded": {
        "topic": {
          "id": "versioning",
          "category": "API Lifecycle",
          "name": "Versionning",
          "description": "How to handle API versionning",
          "_links": {
            "self": {
              "href": "/design/topics/versioning.json"
            },
            "topicGuidelines": {
              "href": "/design/topics/versioning/guidelines.json"
            }
          }
        }
      },
      "_links": {
        "topic": {
          "href": "/design/topics/versioning.json"
        }
      }
    }
  ],
  "_embedded": {
    "guideline": {
      "id": "heroku-http-api-design-guide",
      "title": "HTTP API Design Guide",
      "type": "gitbook",
      "url": "https://geemus.gitbooks.io/http-api-design/content/en/",
      "company": "Heroku",
      "companyLogoUrl": "/media/logos/heroku.png",
      "companyUrl": "https://devcenter.heroku.com/articles/platform-api-reference",
      "screenshotUrl": "/media/screenshots/heroku-http-api-design-guide.png",
      "date": "2016-07-05T00:00:00.000Z",
      "reviewDate": "2016-08-31T00:00:00.000Z",
      "_links": {
        "self": {
          "href": "/design/guidelines/heroku-http-api-design-guide.json"
        },
        "guidelineTopics": {
          "href": "/design/guidelines/heroku-http-api-design-guide/topics.json"
        }
      }
    }
  },
  "_links": {
    "self": {
      "href": "/design/guidelines/heroku-http-api-design-guide/topics.json"
    },
    "guideline": {
      "href": "/design/guidelines/heroku-http-api-design-guide.json"
    }
  }
}